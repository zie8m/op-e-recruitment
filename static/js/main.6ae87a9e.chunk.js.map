{"version":3,"sources":["utilities/getChunks.js","components/Layout.js","components/Container.js","components/Heading.js","components/PaginationWrapper.js","components/List.js","components/ImageWrapper.js","components/Image.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["getChunks","arr","chunk","arguments","length","undefined","results","push","splice","Layout","_ref","children","react_default","a","createElement","react","Responsive","maxWidth","Grid","columns","divided","minWidth","Wrapper","styled","main","_templateObject","Centered","div","_templateObject2","Container","Heading","h5","Heading_templateObject","PaginationWrapper","PaginationWrapper_templateObject","List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","datasets","totalPages","handleSelection","bind","assertThisInitialized","state","activePage","e","console","log","setState","_this2","map","item","index","Table","Row","key","onClick","url","style","cursor","Cell","id","title","basic","selectable","Header","HeaderCell","colSpan","components_Heading","Body","renderBody","components_PaginationWrapper","Pagination","onPageChange","handlePaginationChange","boundaryRange","siblingRange","size","Component","ImageWrapper","ImageWrapper_templateObject","Image","img","Image_templateObject","src","Display","components_ImageWrapper","components_Image","App","onClickRow","loading","fetch","then","res","json","preventDefault","currentImage","Loader","components_Container","Segment","components_Layout","Column","components_List","components_Display","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ae87a9e.chunk.js","sourcesContent":["const getChunks = (arr, chunk = 12) => {\n  let results = [];\n  while (arr.length) {\n    results.push(arr.splice(0, chunk));\n  }\n  return results;\n};\n\nexport default getChunks;\n","import React, { Fragment } from \"react\";\nimport { Responsive, Grid } from \"semantic-ui-react\";\n\nconst Layout = ({ children }) => (\n  <Fragment>\n    <Responsive maxWidth={799}>\n      <Grid columns={1} divided>\n        {children}\n      </Grid>\n    </Responsive>\n    <Responsive minWidth={800}>\n      <Grid columns={2} divided>\n        {children}\n      </Grid>\n    </Responsive>\n  </Fragment>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.main`\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Centered = styled.div`\n  width: 85vw;\n  max-width: 1500px;\n  min-width: 500px;\n`;\n\nconst Container = ({ children }) => (\n  <Wrapper>\n    <Centered>{children}</Centered>\n  </Wrapper>\n);\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Heading = styled.h5`\n  text-align: center;\n  transform: rotateX(180deg);\n`;\n\nexport default Heading;\n","import styled from \"styled-components\";\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport default PaginationWrapper;\n","import React, { Component, Fragment } from \"react\";\nimport { Table, Pagination } from \"semantic-ui-react\";\n\nimport Heading from \"./Heading\";\nimport PaginationWrapper from \"./PaginationWrapper\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.datasets;\n    this.totalPages = this.data.length;\n    this.handleSelection = props.handleSelection.bind(this);\n    this.state = {\n      activePage: 1\n    };\n  }\n\n  handlePaginationChange(e, { activePage }) {\n    console.log(activePage);\n    this.setState({ activePage });\n  }\n\n  renderBody(data) {\n    return data.map((item, index) => {\n      return (\n        <Table.Row\n          key={index}\n          onClick={e => this.handleSelection(e, item.url)}\n          style={{ cursor: \"pointer\" }}\n        >\n          <Table.Cell>{item.id}</Table.Cell>\n          <Table.Cell>{item.title}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Table basic=\"very\" selectable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"2\">\n                <Heading>Welcome back!</Heading>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {this.renderBody(this.data[this.state.activePage - 1])}\n          </Table.Body>\n        </Table>\n        <PaginationWrapper>\n          <Pagination\n            activePage={this.state.activePage}\n            onPageChange={this.handlePaginationChange.bind(this)}\n            totalPages={this.totalPages}\n            boundaryRange={0}\n            siblingRange={1}\n            size=\"mini\"\n          />\n        </PaginationWrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  min-height: 600px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default ImageWrapper;\n","import styled from \"styled-components\";\n\nconst Image = styled.img`\n  content: url(\"${props => props.src}\")\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  cursor: pointer;\n  \n  &:hover {\n    height: auto;\n    width: auto;\n    max-height: 100%;\n    max-width: 100%;\n  }\n`;\n\nexport default Image;\n","import React from \"react\";\n\nimport ImageWrapper from \"./ImageWrapper\";\nimport Image from \"./Image\";\n\nconst Display = props => {\n  return (\n    <ImageWrapper>\n      <Image src={props.src} />\n    </ImageWrapper>\n  );\n};\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport { Grid, Segment, Loader } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport getChunks from \"./utilities/getChunks\";\n\nimport Layout from \"./components/Layout\";\nimport Container from \"./components/Container\";\nimport List from \"./components/List\";\nimport Display from \"./components/Display\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.onClickRow = this.handleSelection.bind(this);\n    this.state = {\n      data: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/photos/\")\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        let sliced = getChunks(data);\n        return sliced;\n      })\n      .then(datasets => {\n        this.setState({ data: datasets, loading: false });\n      });\n  }\n\n  handleSelection(e, url) {\n    e.preventDefault();\n    this.setState({ currentImage: url });\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <Container>\n          <Segment>\n            <Layout>\n              <Grid.Column>\n                <List\n                  datasets={this.state.data}\n                  handleSelection={this.onClickRow}\n                />\n              </Grid.Column>\n              <Grid.Column>\n                <Display src={this.state.currentImage} />\n              </Grid.Column>\n            </Layout>\n          </Segment>\n        </Container>\n      );\n    } else {\n      return <Loader />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}